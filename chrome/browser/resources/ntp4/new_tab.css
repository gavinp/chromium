/* Copyright (c) 2011 The Chromium Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 *
 * This is the stylesheet used by the touch-enabled new tab page
 */

html {
  /* It's necessary to put this here instead of in body in order to get the
     background-size of 100% to work properly */
  height: 100%;
}

body {
  background-size: auto 100%;
  font-family: segoe ui, arial, helvetica, sans-serif;
  font-size: 14px;
  margin: 0;
  /* Don't highlight links when they're tapped.  Safari has bugs here that
     show up as flicker when dragging in some situations */
  -webkit-tap-highlight-color: transparent;
  /* Don't allow selecting text - can occur when dragging */
  -webkit-user-select: none;
}

/* The frame is what the slider fits into
 */
#apps-frame {
  /* We want this to fill the window except for the region used
     by footer
  */
  position: fixed;
  width: 100%;
  top: 0;
  bottom: 60px;     /* must match #footer height */
  overflow: hidden;
}

/* The list holds all the pages and is what the touch events are attached to
*/
#apps-page-list {
  /* fill the apps-frame */
  height: 100%;
  display: -webkit-box;
}

/* The apps-page is the slider card that is moved.
 */
.apps-page {
  margin-left: auto;
  margin-right: auto;
  min-width: 480px;
  max-width: 960px;
  position: relative;
  width: 100%;
  -webkit-box-sizing: border-box;
}

.app {
  display: inline-block;
  height: 128px;
  position: absolute;
  text-align: center;
  width: 128px;
  /* Animate effects to/from the grabbed state, and the position when drop
     is cancelled.  I'd like to also animate movement when an app is
     re-positioned, but since chrome is doing the layout there is no property
     to animate. */
  -webkit-transition: -webkit-transform 200ms, opacity 200ms, zIndex 200ms,
                      left 0, top 0;
  /* Don't offer the context menu on long-press. */
  -webkit-touch-callout: none;
}

.app span {
  display: block;
  text-decoration: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

/* TODO(estade): hover effect? press effect? */
.app img {
  cursor: pointer;
  display: block;
  width: 96px;
  height: 96px;
  margin-left: auto;
  margin-right: auto;
  /* -webkit-mask-image set by JavaScript to the image source */
  -webkit-mask-size: 100% 100%;
}

/* Pressed is set when an app is first touched.
   By using the mask, pressing causes a darkening effect of just the image */
.app.grabber-pressed img {
  opacity: 0.8;
}

/* Grabbed is set (and pressed is cleared) when the app has been held. */
.grabber-grabbed {
  opacity: 0.8;
  -webkit-transform: scale3d(1.4, 1.4, 1);
}

/* Dragging is set (without grabbed being cleared) when a grabbed app is
   moved */
.grabber-dragging {
  /* We need to ensure there is no animation applied to its position
    (or the drag touch may stop being over top of it */
  -webkit-transition: none !important;

  /* Ensure the element has a large z-index so that we can get events
     for it as it moves over other elements.  This is animated as the
     element flys back, so we want a large value that will stay large until
     its almost home.  */
  z-index: 100;
}

#footer {
  bottom: 0;
  position: fixed;
  width: 100%;
}

/* TODO(estade): remove this border hack and replace with a webkit-gradient
 * border-image on #footer once WebKit supports border-image-slice.
 * See https://bugs.webkit.org/show_bug.cgi?id=20127 */
#footer-border {
  background: -webkit-gradient(linear, left top, right top,
                               from(#eee), color-stop(0.5, #ccc), to(#eee));
  height: 1px;
}

#footer-content {
  display: -webkit-box;
  height: 59px;
  -webkit-box-align: center;
}

#footer-content > * {
  margin: 0 9px;
}

/* TODO(estade): theme this color. */
#footer-content > span {
  color: #888;
}

.footer-divider {
  background: -webkit-gradient(linear, left top, left bottom,
                               from(#eee), color-stop(0.5, #bbb), to(#eee));
  width: 1px;
}

#footer-divider-1 {
  height: 60%;
}

#footer-divider-2 {
  height: 40%;
}

/* TODO(estade): handle overflow better? I tried overflow-x: hidden and
   overflow-y: visible (for the new dot animation), but this makes a scroll
   bar appear */
#dot-list {
  list-style-type: none;
  margin: 0;
  padding: 0;
  white-space: nowrap;
  -webkit-box-flex: 1;
}

/* TODO(estade): improve focus indicator. */
.dot {
  background-color: #bbb;
  cursor: pointer;
  display: inline-block;
  height: 13px;
  margin: 10px;
  width: 60px;
  -webkit-border-radius: 2px;
  -webkit-box-sizing: border-box;
  -webkit-transition-duration: 500ms;
  -webkit-transition-property: -webkit-transform;
}

.dot.selected {
  background-color: #888;
}

.dot.new {
  -webkit-transform: translate(0, 40px);
}

#trash {
  position: absolute;
  width: 110px;
  height: 100%;
  right: 0;
  bottom: 0;
  background-image: url('../shared/images/trash.png');
  background-size: 40px 40px;
  background-repeat: no-repeat;
  background-position: 40px 12px;
  /* Work-around chromium bug 74730 by using translate instead of the
     GPU-accelerated translate3d */
  -webkit-transform: translate(80px, 0);
  -webkit-transition-property: -webkit-transform;
  -webkit-transition-duration: 500ms;
}

#trash.hover {
  background-image: url('../shared/images/trash-open.png');
}

.app.trashing img {
  opacity: 0.3;
}

#footer.rearrange-mode #trash {
  -webkit-transform: translate(0, 0);
}

/* Ensure template items are never drawn when the page initially loads */
#app-template {
  display: none;
}
